{
    "info": {
        "_postman_id": "f367b534-c9ea-e7c5-1f46-7a27dc6a30ba",
        "name": "commercetools Composable Commerce Import API",
        "description": "# commercetools API Postman Collection\n\nThis Postman collection contains examples of requests and responses for most endpoints and commands of the\ncommercetools Composable Commerce Import API. For every command the smallest possible payload is given. Please find optional\nfields in the related official documentation. Additionally the collection provides example requests and\nresponses for specific tasks and more complex data models.\n\n## Disclaimer\n\nThis is not the official commercetools Composable Commerce Import API documentation. Please see [here](http:\/\/docs.commercetools.com\/)\nfor a complete and approved documentation of the commercetools Composable Commerce Import API.\n\n## How to use\n\n**:warning: Be aware that postman automatically synchronizes environment variables (including your API client credentials) to your workspace if logged in.\nUse this collection only for development purposes and non-production projects.**\n\nTo use this collection in Postman please perform the following steps:\n\n1. Download and install the Postman Client\n2. Import the [collection.json](collection.json) and [template.json](template.json) in your postman application\n3. In the Merchant Center, create a new API Client and fill in the client credentials in your environment\n4. Obtain an access token by sending the \"Authorization\/Obtain access token\" request at the bottom of the request list. Now you can use all other endpoints\n\nFeel free to clone and modify this collection to your needs.\n\nTo automate frequent tasks the collection automatically manages commonly required values and parameters such\nas resource ids, keys and versions in Postman environment variables for you.\n\nPlease see http:\/\/docs.commercetools.com\/ for further information about the commercetools Plattform.",
        "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
    },
    "auth":
        {
            "type": "oauth2",
            "oauth2": {
                "accessToken": "{{ctp_access_token}}",
                "addTokenTo": "header",
                "tokenType": "Bearer"
            }
        },
    "item": [
        {
            "name": "Authorization",
            "description": "Authorization",
            "item": [
                {
                    "name": "Obtain access token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Obtain access token through password flow",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "",
                                "value": "",
                                "disabled": true
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/customers/token?grant_type=password&username={{user_email}}&password={{user_password}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "customers",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "password",
                                    "equals": true
                                },
                                {
                                    "key": "username",
                                    "value": "",
                                    "equals": true
                                },
                                {
                                    "key": "password",
                                    "value": "",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Password Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id, client_secret, user_email and user_password to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token for Anonymous Sessions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/anonymous/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "anonymous",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for a anonymous session. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token Introspection",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/introspect?token={{ctp_access_token}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "introspect"
                            ],
                            "query": [
                                {
                                    "key": "token",
                                    "value": "{{ctp_access_token}}",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Token introspection allows to determine the active state of an OAuth 2.0 access token and to determine meta-information about this accces token, such as the `scope`."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Project",
            "description": "null",
            "item": [
                {
                    "name": "Import-containers",
                    "description": "null",
                    "item": [
                        {
                            "name": "Query import-summaries",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-summary-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-summary-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-summary-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-summary-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-summary-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-summary-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-containers/{{import-container-key}}/import-summaries",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-containers",
                                        "{{import-container-key}}",
                                        "import-summaries"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves an [ImportSummary](ctp:import:type:ImportSummary) for the given Import Container. An [ImportSummary](ctp:import:type:ImportSummary) is calculated on demand.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Query import-operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-operation-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-operation-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-operation-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-containers/{{import-container-key}}/import-operations",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-containers",
                                        "{{import-container-key}}",
                                        "import-operations"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "offset",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "sort",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "resourceKey",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "state",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "debug",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        }
                                    ]
                                },
                                "description": "Retrieves all [ImportOperations](ctp:import:type:ImportOperation) of a given ImportContainer key.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Update import-container",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-container-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-container-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-container-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "put",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-containers/{{import-container-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-containers",
                                        "{{import-container-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Updates the Import Container given by the key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"version\" : 1,\n  \"resourceType\" : \"product\"\n}"
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Get import-container",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-container-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-container-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-container-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-containers/{{import-container-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-containers",
                                        "{{import-container-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves the Import Container given by the key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Delete an Import Container.",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-container-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-container-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-container-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-containers/{{import-container-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-containers",
                                        "{{import-container-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the Import Container specified by the `importContainerKey`.\n\nGenerates the [ImportContainerDeleted](\/projects\/events#import-container-deleted-event) Event.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Create a new Import Container.",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-container-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-container-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-container-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-containers",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-containers"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates a new Import Container.\n\nGenerates the [ImportContainerCreated](\/projects\/events#import-container-created-event) Event.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\" : \"my-import-container\"\n}"
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "get ByProjectKeyImportContainers",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-container-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-container-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-container-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-containers",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-containers"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "offset",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "sort",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        }
                                    ]
                                },
                                "description": "Retrieves all Import Containers of a given project key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Import-operations",
                    "description": "null",
                    "item": [
                        {
                            "name": "Get import-operation",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-operation-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-operation-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-operation-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-operations/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-operations",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves the [ImportOperation](ctp:import:type:ImportOperation) of a given ID.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Categories",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/categories/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "categories",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Categories or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"category\",\n  \"resources\" : [ {\n    \"key\" : \"category-to-import\",\n    \"name\" : {\n      \"en\" : \"Category to import\"\n    },\n    \"slug\" : {\n      \"en\" : \"category-to-import-slug\"\n    },\n    \"description\" : {\n      \"en\" : \"Description of category to import\"\n    },\n    \"parent\" : {\n      \"typeId\" : \"category\",\n      \"key\" : \"key-of-parent-category\"\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Prices",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/prices/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "prices",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Prices or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"price\",\n  \"resources\" : [ {\n    \"key\" : \"price-key\",\n    \"country\" : \"DE\",\n    \"validFrom\" : \"2021-04-11T14:00:00.000Z\",\n    \"validUntil\" : \"2022-04-11T14:00:00.000Z\",\n    \"customerGroup\" : {\n      \"typeId\" : \"customer-group\",\n      \"key\" : \"customer-group-key\"\n    },\n    \"channel\" : {\n      \"typeId\" : \"channel\",\n      \"key\" : \"channel-key\"\n    },\n    \"productVariant\" : {\n      \"typeId\" : \"product-variant\",\n      \"key\" : \"red-t-shirt\"\n    },\n    \"product\" : {\n      \"typeId\" : \"product\",\n      \"key\" : \"t-shirt\"\n    },\n    \"value\" : {\n      \"type\" : \"centPrecision\",\n      \"currencyCode\" : \"EUR\",\n      \"centAmount\" : 300\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Standalone-prices",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/standalone-prices/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "standalone-prices",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Standalone Prices or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"standalone-price\",\n  \"resources\" : [ {\n    \"key\" : \"standalone-price-key\",\n    \"sku\" : \"variantSku\",\n    \"value\" : {\n      \"type\" : \"centPrecision\",\n      \"currencyCode\" : \"EUR\",\n      \"centAmount\" : 100\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Products",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/products/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "products",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Products or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"product\",\n  \"resources\" : [ {\n    \"key\" : \"product-key\",\n    \"name\" : {\n      \"en\" : \"t-shirt\"\n    },\n    \"productType\" : {\n      \"typeId\" : \"product-type\",\n      \"key\" : \"product-type-key\"\n    },\n    \"slug\" : {\n      \"en\" : \"t-shirt-slug\"\n    },\n    \"description\" : {\n      \"en\" : \"t-shirt-description\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"key\" : \"category-key\"\n    } ],\n    \"taxCategory\" : {\n      \"typeId\" : \"tax-category\",\n      \"key\" : \"tax-category-key\"\n    },\n    \"state\" : {\n      \"typeId\" : \"state\",\n      \"key\" : \"state-key\"\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Product-drafts",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-drafts/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-drafts",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new ProductDrafts or updating existing ones.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"product-draft\",\n  \"resources\" : [ {\n    \"key\" : \"product-draft-key\",\n    \"name\" : {\n      \"en\" : \"blue shirt\"\n    },\n    \"slug\" : {\n      \"en\" : \"blue-t-shirt\"\n    },\n    \"productType\" : {\n      \"typeId\" : \"product-type\",\n      \"key\" : \"sample\"\n    },\n    \"masterVariant\" : {\n      \"key\" : \"master-variant-key\",\n      \"attributes\" : [ {\n        \"type\" : \"reference\",\n        \"name\" : \"product-ref-attribute\",\n        \"value\" : {\n          \"key\" : \"category-key\",\n          \"typeId\" : \"category\"\n        }\n      }, {\n        \"type\" : \"reference\",\n        \"name\" : \"product-custom-object-ref-attribute\",\n        \"value\" : {\n          \"key\" : \"custom-object-key\",\n          \"container\" : \"custom-object-container-key\",\n          \"typeId\" : \"key-value-document\"\n        }\n      } ]\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Product-types",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-types/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-types",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new ProductTypes or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"product-type\",\n  \"resources\" : [ {\n    \"key\" : \"product-type-key\",\n    \"name\" : \"Product Type name\",\n    \"description\" : \"Test product type\",\n    \"attributes\" : [ {\n      \"name\" : \"product-ref-attribute\",\n      \"label\" : {\n        \"en\" : \"selling product\"\n      },\n      \"isRequired\" : false,\n      \"isSearchable\" : false,\n      \"type\" : {\n        \"name\" : \"reference\",\n        \"referenceTypeId\" : \"category\"\n      },\n      \"attributeConstraint\" : \"Unique\",\n      \"inputTip\" : {\n        \"en\" : \"product input tip\"\n      },\n      \"inputHint\" : \"SingleLine\"\n    } ]\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Product-variants",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-variants/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-variants",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new ProductVariants or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"product-variant\",\n  \"resources\" : [ {\n    \"key\" : \"red-t-shirt\",\n    \"sku\" : \"red-t-shirt\",\n    \"product\" : {\n      \"key\" : \"t-shirt\",\n      \"typeId\" : \"product\"\n    },\n    \"isMasterVariant\" : true,\n    \"attributes\" : [ {\n      \"name\" : \"new\",\n      \"type\" : \"boolean\",\n      \"value\" : true\n    }, {\n      \"name\" : \"weight\",\n      \"type\" : \"number\",\n      \"value\" : 12.5\n    } ]\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Product-variant-patches",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-variant-patches/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-variant-patches",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a new import request for Product Variant Patches.\nReturns an [InvalidField](ctp:import:type:InvalidFieldError) error if the [ProductVariantPatchRequest](ctp:import:type:ProductVariantPatchRequest) contains patches with and without the `product` field set.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"product-variant-patch\",\n  \"patches\" : [ {\n    \"productVariant\" : {\n      \"typeId\" : \"product-variant\",\n      \"key\" : \"red-t-shirt\"\n    },\n    \"attributes\" : {\n      \"attribute-to-update\" : {\n        \"type\" : \"boolean\",\n        \"value\" : true\n      },\n      \"name-of-attribute-to-delete\" : {\n        \"annotations\" : [ ],\n        \"value\" : null\n      },\n      \"name-of-localized-attribute-to-update\" : {\n        \"type\" : \"ltext\",\n        \"value\" : {\n          \"en\" : \"Existing field\",\n          \"es\" : {\n            \"annotations\" : [ ],\n            \"value\" : null\n          },\n          \"de\" : \"Updating field\"\n        }\n      },\n      \"name-of-localized-attribute-set-to-update\" : {\n        \"type\" : \"ltext-set\",\n        \"value\" : [ {\n          \"en\" : \"Existing field\",\n          \"es\" : {\n            \"annotations\" : [ ],\n            \"value\" : null\n          },\n          \"de\" : \"Updating field\",\n          \"br\" : \"New field\"\n        }, {\n          \"en\" : \"Another Existing field\",\n          \"es\" : {\n            \"annotations\" : [ ],\n            \"value\" : null\n          },\n          \"de\" : \"Another Updating field\",\n          \"br\" : \"Another New field\"\n        } ]\n      }\n    },\n    \"staged\" : false\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Orders",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/orders/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "orders",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Orders.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"order\",\n  \"resources\" : [ {\n    \"orderNumber\" : \"order-number\",\n    \"customer\" : {\n      \"typeId\" : \"customer\",\n      \"key\" : \"order-customer-key\"\n    },\n    \"lineItems\" : [ {\n      \"name\" : {\n        \"en\" : \"abc\"\n      },\n      \"quantity\" : 10,\n      \"price\" : {\n        \"value\" : {\n          \"type\" : \"centPrecision\",\n          \"centAmount\" : 100,\n          \"currencyCode\" : \"EUR\"\n        }\n      },\n      \"supplyChannel\" : {\n        \"typeId\" : \"channel\",\n        \"key\" : \"supplier-channel-key\"\n      },\n      \"variant\" : {\n        \"productVariant\" : {\n          \"typeId\" : \"product-variant\",\n          \"key\" : \"product-key\"\n        },\n        \"sku\" : \"variant-sku\"\n      }\n    } ],\n    \"customerGroup\" : {\n      \"typeId\" : \"customer-group\",\n      \"key\" : \"customer-group-key\"\n    },\n    \"totalPrice\" : {\n      \"type\" : \"centPrecision\",\n      \"currencyCode\" : \"EUR\",\n      \"centAmount\" : 4200\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Order-patches",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/order-patches/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "order-patches",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a new import request for order patches",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"order-patch\",\n  \"patches\" : [ {\n    \"orderNumber\" : \"order-number\",\n    \"fields\" : {\n      \"addReturnInfo\" : {\n        \"items\" : [ {\n          \"quantity\" : 1,\n          \"lineItemId\" : \"1\",\n          \"comment\" : \"any comment\",\n          \"shipmentState\" : \"Advised\"\n        } ],\n        \"returnTrackingId\" : \"returnTrackingId-example\",\n        \"returnDate\" : \"2021-04-30T09:21:15.003Z\"\n      },\n      \"addDeliveries\" : [ {\n        \"items\" : [ {\n          \"id\" : \"4ce24c27-cce5-447c-890e-0d6b70b690be\",\n          \"quantity\" : 5\n        } ],\n        \"parcels\" : [ {\n          \"measurements\" : {\n            \"heightInMillimeter\" : 20,\n            \"lengthInMillimeter\" : 40,\n            \"widthInMillimeter\" : 5,\n            \"weightInGram\" : 10\n          }\n        } ]\n      } ],\n      \"removeDelivery\" : {\n        \"id\" : \"95a6e7a7-b74e-4397-b0b4-37473d2e3573\"\n      },\n      \"removeParcelFromDelivery\" : {\n        \"parcelId\" : \"98840afa-ac20-4a34-a904-88d3407e2d76\"\n      },\n      \"addParcelToDelivery\" : {\n        \"deliveryId\" : \"95a6e7a7-b74e-4397-b0b4-37473d2e3573\",\n        \"measurements\" : {\n          \"heightInMillimeter\" : 20,\n          \"lengthInMillimeter\" : 40,\n          \"widthInMillimeter\" : 5,\n          \"weightInGram\" : 10\n        }\n      },\n      \"setParcelMeasurements\" : {\n        \"parcelId\" : \"98840afa-ac20-4a34-a904-88d3407e2d76\",\n        \"measurements\" : {\n          \"heightInMillimeter\" : 20,\n          \"lengthInMillimeter\" : 40,\n          \"widthInMillimeter\" : 5,\n          \"weightInGram\" : 10\n        }\n      },\n      \"setParcelTrackingData\" : {\n        \"parcelId\" : \"98840afa-ac20-4a34-a904-88d3407e2d76\",\n        \"trackingData\" : {\n          \"carrier\" : \"carrier data\"\n        }\n      },\n      \"setParcelItems\" : [ {\n        \"parcelId\" : \"98840afa-ac20-4a34-a904-88d3407e2d76\",\n        \"items\" : [ {\n          \"id\" : \"4ce24c27-cce5-447c-890e-0d6b70b690be\",\n          \"quantity\" : 5\n        } ]\n      } ]\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Customers",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/customers/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "customers",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Customers or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"customer\",\n  \"resources\" : [ {\n    \"key\" : \"customer-to-import\",\n    \"customerNumber\" : \"12345\",\n    \"email\" : \"john@example.com\",\n    \"password\" : \"D0cEx@mpl3!2025\",\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"dateOfBirth\" : \"1980-01-01\",\n    \"isEmailVerified\" : false,\n    \"externalId\" : \"external-id-123\",\n    \"customerGroup\" : {\n      \"typeId\" : \"customer-group\",\n      \"key\" : \"customer-group-key\"\n    },\n    \"addresses\" : [ {\n      \"key\" : \"john-doe-address-key\",\n      \"streetName\" : \"Main Street\",\n      \"streetNumber\" : \"123\",\n      \"postalCode\" : \"12345\",\n      \"city\" : \"Berlin\",\n      \"country\" : \"DE\"\n    } ],\n    \"authenticationMode\" : \"Password\"\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Inventories",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/inventories/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "inventories",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Inventories or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"inventory\",\n  \"resources\" : [ {\n    \"key\" : \"inventory-import-key\",\n    \"sku\" : \"product-variant-sku\",\n    \"quantityOnStock\" : 15,\n    \"restockableInDays\" : 2,\n    \"expectedDelivery\" : \"2022-06-30T14:00:00.000Z\",\n    \"supplyChannel\" : {\n      \"typeId\" : \"channel\",\n      \"key\" : \"channel-key\"\n    }\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Types",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/types/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "types",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Type or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"type\",\n  \"resources\" : [ {\n    \"key\" : \"type-key\",\n    \"name\" : {\n      \"en\" : \"Name of type\"\n    },\n    \"description\" : {\n      \"en\" : \"Description of type\"\n    },\n    \"resourceTypeIds\" : [ \"customer\" ],\n    \"fieldDefinitions\" : [ {\n      \"type\" : {\n        \"name\" : \"String\"\n      },\n      \"name\" : \"exampleStringField\",\n      \"label\" : {\n        \"en\" : \"Example string field.\"\n      },\n      \"required\" : false,\n      \"inputHint\" : \"SingleLine\"\n    } ]\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Discount-codes",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-containers",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Import import-container",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-container-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-container-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-container-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-container-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-container-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-container-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "post",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/discount-codes/import-containers/{{import-container-key}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "discount-codes",
                                                "import-containers",
                                                "{{import-container-key}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Creates a request for creating new Discount Codes or updating existing ones.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\" : \"discount-code\",\n  \"resources\" : [ {\n    \"key\" : \"discountCodeKey\",\n    \"code\" : \"Save10\",\n    \"name\" : {\n      \"en\" : \"Save10\"\n    },\n    \"cartDiscounts\" : [ {\n      \"typeId\" : \"cart-discount\",\n      \"key\" : \"cartDiscountKey\"\n    } ],\n    \"isActive\" : false,\n    \"groups\" : [ ]\n  } ]\n}"
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}
