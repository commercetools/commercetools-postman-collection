{
    "info": {
        "_postman_id": "f367b534-c9ea-e7c5-1f46-7a27dc6a30ba",
        "name": "Checkout API",
        "description": "# commercetools API Postman Collection\n\nThis Postman collection contains examples of requests and responses for most endpoints and commands of the\nCheckout API. For every command the smallest possible payload is given. Please find optional\nfields in the related official documentation. Additionally the collection provides example requests and\nresponses for specific tasks and more complex data models.\n\n## Disclaimer\n\nThis is not the official Checkout API documentation. Please see [here](http:\/\/docs.commercetools.com\/)\nfor a complete and approved documentation of the Checkout API.\n\n## How to use\n\n**:warning: Be aware that postman automatically synchronizes environment variables (including your API client credentials) to your workspace if logged in.\nUse this collection only for development purposes and non-production projects.**\n\nTo use this collection in Postman please perform the following steps:\n\n1. Download and install the Postman Client\n2. Import the [collection.json](collection.json) and [template.json](template.json) in your postman application\n3. In the Merchant Center, create a new API Client and fill in the client credentials in your environment\n4. Obtain an access token by sending the \"Authorization\/Obtain access token\" request at the bottom of the request list. Now you can use all other endpoints\n\nFeel free to clone and modify this collection to your needs.\n\nTo automate frequent tasks the collection automatically manages commonly required values and parameters such\nas resource ids, keys and versions in Postman environment variables for you.\n\nPlease see http:\/\/docs.commercetools.com\/ for further information about the commercetools Plattform.",
        "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
    },
    "auth":
        {
            "type": "oauth2",
            "oauth2": {
                "accessToken": "{{ctp_access_token}}",
                "addTokenTo": "header",
                "tokenType": "Bearer"
            }
        },
    "item": [
        {
            "name": "Authorization",
            "description": "Authorization",
            "item": [
                {
                    "name": "Obtain access token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Obtain access token through password flow",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "",
                                "value": "",
                                "disabled": true
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/customers/token?grant_type=password&username={{user_email}}&password={{user_password}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "customers",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "password",
                                    "equals": true
                                },
                                {
                                    "key": "username",
                                    "value": "",
                                    "equals": true
                                },
                                {
                                    "key": "password",
                                    "value": "",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Password Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id, client_secret, user_email and user_password to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token for Anonymous Sessions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/anonymous/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "anonymous",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for a anonymous session. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token Introspection",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/introspect?token={{ctp_access_token}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "introspect"
                            ],
                            "query": [
                                {
                                    "key": "token",
                                    "value": "{{ctp_access_token}}",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Token introspection allows to determine the active state of an OAuth 2.0 access token and to determine meta-information about this accces token, such as the `scope`."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Project",
            "description": "null",
            "item": [
                {
                    "name": "Payment Intents",
                    "description": "null",
                    "item": [
                        {
                            "name": "Manage Payment by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-intent-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-intent-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-intent-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-intent-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-intent-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-intent-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-intents/{{payment-id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-intents",
                                        "{{payment-id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Specific Error Codes:\n- [MultipleActionsNotAllowed](ctp:checkout:type:MultipleActionsNotAllowedError)\n- [RequiredField](ctp:checkout:type:RequiredFieldError)\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"actions\" : [ {\n    \"action\" : \"capturePayment\",\n    \"amount\" : {\n      \"centAmount\" : 10000,\n      \"currencyCode\" : \"EUR\"\n    },\n    \"merchantReference\" : \"example-reference\"\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Transactions",
                    "description": "null",
                    "item": [
                        {
                            "name": "Get Transaction by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"transaction-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"transaction-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"transaction-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"transaction-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"transaction-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"transaction-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/transactions/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "transactions",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Returns a Transaction with a given `id`. Specific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Get Transaction by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"transaction-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"transaction-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"transaction-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"transaction-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"transaction-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"transaction-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/transactions/key={{transaction-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "transactions",
                                        "key={{transaction-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Returns a Transaction with a given `key`. Specific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Create Transaction",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"transaction-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"transaction-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"transaction-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"transaction-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"transaction-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"transaction-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/transactions",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "transactions"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates a Transaction on Checkout. Specific Error Codes:\n- [InvalidInput](ctp:checkout:type:InvalidInputError)\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [ConnectorFailed](ctp:checkout:type:ConnectorFailedError)\n- [PaymentFailure](ctp:checkout:type:PaymentFailureError)\n- [RequiredField](ctp:checkout:type:RequiredFieldError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\" : \"transaction-key\",\n  \"application\" : {\n    \"typeId\" : \"application\",\n    \"id\" : \"a84d4fe7-ae82-4c3f-8c6c-435e54204fdd\"\n  },\n  \"cart\" : {\n    \"typeId\" : \"cart\",\n    \"id\" : \"a0e60229-441c-44b0-952b-981a67cbd8c4\"\n  },\n  \"transactionItems\" : [ {\n    \"paymentIntegration\" : {\n      \"typeId\" : \"payment-integration\",\n      \"id\" : \"4c24762b-87df-4bd3-898a-bafed913a9ca\"\n    },\n    \"amount\" : {\n      \"centAmount\" : 1000,\n      \"currencyCode\" : \"EUR\"\n    }\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Payment-integrations",
                    "description": "null",
                    "item": [
                        {
                            "name": "Get Payment Integration by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves Payment Integrations in a [Project](ctp:api:type:Project) with a given `id`.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Check Payment Integration by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "head",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Checks if a PaymentIntegration with a given `id` exists. Returns `200 OK` if the PaymentIntegration exists, or `404 Not Found` if it doesn't. Specific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Update Payment Integration by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"my-payment-integration\"\n  } ]\n}"
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Delete Payment Integration by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Get Payment Integration by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/key={{payment-integration-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "key={{payment-integration-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves Payment Integrations in a [Project](ctp:api:type:Project) with a given `key`. Specific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Update Payment Integration by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/key={{payment-integration-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "key={{payment-integration-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Check Payment Integration by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "head",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/key={{payment-integration-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "key={{payment-integration-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Checks if a PaymentIntegration with a given `key` exists. Returns `200 OK` if the PaymentIntegration exists, or `404 Not Found` if it doesn't. Specific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Delete Payment Integration by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations/key={{payment-integration-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations",
                                        "key={{payment-integration-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Query Payment Integrations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations"
                                    ],
                                    "query": [
                                        {
                                            "key": "sort",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "limit",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "offset",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "withTotal",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        }
                                    ]
                                },
                                "description": "Retrieves Payment Integrations in a [Project](ctp:api:type:Project).\n\nThe results are [paginated](\/..\/api\/general-concepts#pagination).\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Create Payment Integration",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"payment-integration-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"payment-integration-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"payment-integration-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"payment-integration-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"payment-integration-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/payment-integrations",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "payment-integrations"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates a new PaymentIntegration.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"card\",\n  \"status\" : \"Active\",\n  \"name\" : \"Credit Card via Adyen\",\n  \"application\" : {\n    \"id\" : \"bc95d35a-8cc1-484c-b207-bd8c55a55a28\",\n    \"typeId\" : \"application\"\n  },\n  \"connectorDeployment\" : {\n    \"id\" : \"cb0ad988-cc50-4829-83ad-777993d0ddd5\",\n    \"typeId\" : \"deployment\"\n  },\n  \"predicate\" : \"country='DE'\",\n  \"componentType\" : \"Component\",\n  \"sortingInfo\" : {\n    \"priority\" : 1\n  },\n  \"displayInfo\" : {\n    \"label\" : {\n      \"en\" : \"Credit Cards\"\n    },\n    \"logoUrl\" : {\n      \"en\" : \"https:\/\/mylogourl.com\/logo.svg\"\n    },\n    \"description\" : {\n      \"en\" : \"Pay securely with Credit Cards\"\n    },\n    \"payButtonText\" : {\n      \"en\" : \"Pay with cards\"\n    }\n  },\n  \"automatedReversalConfiguration\" : {\n    \"status\" : \"Active\",\n    \"predicate\" : \"country='DE'\"\n  }\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Applications",
                    "description": "null",
                    "item": [
                        {
                            "name": "Get Application by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves an [Application](ctp:checkout:type:Application) by a given `id`.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Check Application by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "head",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Checks if an [Application](\/applications-api#application) with a given `id` exists. Returns `200 OK` if the Application exists, or `404 Not Found` if it doesn't. Specific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Update Application by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : \"my-application\"\n  } ]\n}"
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Delete Application by ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/{{id}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "{{id}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Get Application by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/key={{application-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "key={{application-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves an [Application](ctp:checkout:type:Application) with a given `key`.\nSpecific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Update Application by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/key={{application-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "key={{application-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Check Application by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "head",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/key={{application-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "key={{application-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Checks if an [Application](ctp:checkout:type:Application) with a given `key` exists. Returns `200 OK` if the Application exists, or `404 Not Found` if it doesn't. Specific Error Codes:\n- [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)\n- [GeneralError](ctp:checkout:type:GeneralError)\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Delete Application by Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications/key={{application-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications",
                                        "key={{application-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "null",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Query Applications",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications"
                                    ],
                                    "query": [
                                        {
                                            "key": "sort",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "limit",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "offset",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        },
                                        {
                                            "key": "withTotal",
                                            "value": "",
                                            "equals": true,
                                            "disabled": true
                                        }
                                    ]
                                },
                                "description": "Retrieves Applications\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Create Application",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"application-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"application-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"application-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"application-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"application-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"application-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/applications",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "applications"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates a new [Application](ctp:checkout:type:Application).\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\" : \"my-application\",\n  \"allowedOrigins\" : {\n    \"allowAll\" : false,\n    \"origins\" : [ \"https:\/\/demo.com\" ]\n  },\n  \"countries\" : [ \"DE\" ],\n  \"description\" : {\n    \"en\" : \"English description\"\n  },\n  \"name\" : \"My Application\",\n  \"mode\" : \"CompleteFlow\",\n  \"status\" : \"Active\",\n  \"logo\" : {\n    \"url\" : \"https:\/\/svgshare.com\/i\/120g.svg\"\n  },\n  \"agreements\" : [ {\n    \"id\" : \"bc95d35a-8cc1-484c-b207-bd8c55a55a28\",\n    \"name\" : \"myAgreement\",\n    \"type\" : \"MandatoryCheckbox\",\n    \"status\" : \"Active\",\n    \"text\" : {\n      \"en\" : \"By clicking the Complete Purchase button below, I agree to the Terms of Use.\"\n    }\n  } ],\n  \"paymentsConfiguration\" : {\n    \"paymentReturnUrl\" : \"https:\/\/demo.com\/checkout\",\n    \"activePaymentComponentType\" : \"Component\"\n  },\n  \"discountsConfiguration\" : {\n    \"allowDiscounts\" : true\n  }\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                }
            ]
        }
    ]
}
